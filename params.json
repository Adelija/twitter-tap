{"name":"Twitter Tap","tagline":"A python tool for collecting tweets in mongoDB using the search API","body":"# Twitter Tap #\r\n\r\nCollect tweets to a mongoDB using the twitter search API.\r\n\r\n# About Twitter Tap #\r\n\r\nTwitter Tap is a python tool that connects to the Twitter API and issues calls to the search endpoint using a query that the user has entered. The tool follows all the **next_results** links (with the corresponding **max_id**) so that all results are collected. When all the **next_results** links are exhausted the query is repeated using the **since_id** of the latest tweet from the results of the first query and follows all the **next_results** links again. The latest **since_id** is also stored in the database for each distinct query (query, geolocation, language), so that when the tool is restarted you will still only receive unique tweets.\r\n\r\nTweets are stored into a mongoDB, which has a unique index on the Tweet ID so that there is no duplication of data if more than 1 query is executed simultaneously.\r\n\r\nThere is an arbitrary wait time before each API call so that the rate limit is not reached. The default value of 2 seconds makes sure that there are no more than 450 requests per 15 minutes as is the rate limit of the search endpoint for authenticating with the app (not the user).\r\n\r\nThe tool can be run from the command line or be run as a daemon using supervisor (recommended). A sample supervisord.conf script is included with the tool.\r\n\r\n# Installation #\r\n\r\nInstall Twitter Tap using [pip](http://www.pip-installer.org/)\r\n\r\n```bash\r\npip install twitter-tap\r\n```\r\n\r\nOr, if you want the current code\r\n\r\n```bash\r\ngit clone git://github.com/janezkranjc/twitter-tap.git\r\ncd twitter-tap\r\npython setup.py install\r\n```\r\n\r\n# Before you start #\r\n\r\nPlease follow this link https://apps.twitter.com/ and create a twitter app. You will need the consumer key and consumer secret to access the twitter API.\r\n\r\n# Using twitter tap #\r\n\r\nRun Twitter Tap in the command line like this.\r\n\r\n```bash\r\ntap\r\n```\r\n\r\n### Show help text ###\r\n```bash\r\ntap -h\r\n```\r\n\r\n### Executing a query ###\r\n\r\nTo execute a query you must provide a **query**, the **consumer secret** and either the **consumer key** or the access token. Consumer key and secret can be obtained at the http://apps.twitter.com/ website, while the access token will be obtained when first connecting with the key and secret.\r\n\r\n```bash\r\ntap --consumer-key CONSUMERKEY --consumer-secret CONSUMERSECRET -q \"miley cyrus\" -v DEBUG\r\n```\r\n\r\n### Where are the tweets stored ###\r\n\r\nThe tweets are stored in the mongoDB in a collection called **tweets**. This can be changed using the --tweets-collection option. There is also a collection for saving the highest since_id for queries, which is **queries** by default (can be changed using the --queries-collection option).\r\n\r\n# Running as a daemon #\r\n\r\nTo run Tap as a daemon you are encouraged to use supervisor. (Doesn't work natively under windows. You should use cygwin.)\r\n\r\nHere is a sample supervisord.conf file for running tap\r\n\r\n```bash\r\n; Sample supervisor config file for daemonizing the twitter search to mongodb software\r\n\r\n[inet_http_server]          ; inet (TCP) server disabled by default\r\nport=127.0.0.1:9001         ; (ip_address:port specifier, *:port for all iface)\r\nusername=manorastroman      ; (default is no username (open server))\r\npassword=kingofthedragonmen ; (default is no password (open server))\r\n\r\n[supervisord]\r\nstopsignal=INT\r\nlogfile=supervisord.log      ; (main log file;default $CWD/supervisord.log)\r\nlogfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)\r\nlogfile_backups=10           ; (num of main logfile rotation backups;default 10)\r\nloglevel=info                ; (log level;default info; others: debug,warn,trace)\r\npidfile=supervisord.pid      ; (supervisord pidfile;default supervisord.pid)\r\nnodaemon=false               ; (start in foreground if true;default false)\r\nminfds=1024                  ; (min. avail startup file descriptors;default 1024)\r\nminprocs=200                 ; (min. avail process descriptors;default 200)\r\n\r\n[rpcinterface:supervisor]\r\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\r\n\r\n[supervisorctl]\r\nserverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket\r\nusername=manorastroman       ; should be same as http_username if set\r\npassword=kingofthedragonmen  ; should be same as http_password if set\r\n\r\n[program:tap]\r\ncommand=tap --consumer-key CONSUMERKEY --consumer-secret CONSUMERSECRET -q \"janez kranjc\" -v DEBUG\r\nstdout_logfile=tap.log\r\nstderr_logfile=tap_err.log\r\nautostart=true\r\nautorestart=true\r\nstartsecs=10\r\nstopwaitsecs=10\r\n```\r\n\r\nAfterwards you can start the daemon like this (you must be in the same folder as supervisord.conf or your supervisord.conf must be /etc/)\r\n\r\n```bash\r\nsupervisord\r\n```\r\n\r\nOpen your browser to http://127.0.0.1:9001 to see the status of the daemon.\r\nBy default the username is manorastroman and the password kingofthedragonmen.\r\n\r\nAlternatively you can see the status like this\r\n\r\n```bash\r\nsupervisorctl status\r\n```\r\n\r\nOr see the tail of the logs (log file locations can be setup in supervisord.conf)\r\n\r\n```bash\r\nsupervisorctl tail tap\r\n```\r\n\r\nWhenever you feel like shutting it down\r\n\r\n```bash\r\nsupervisorctl shutdown\r\n```\r\n\r\n# Useful links #\r\n\r\n- **MongoDB** https://www.mongodb.org/\r\n- **Twitter developers** https://dev.twitter.com/\r\n- **Supervisor** http://supervisord.org/\r\n\r\n# Changes #\r\n\r\nv1.1.0 (dev):\r\n\r\n-  Added two options for changing the default collection names for queries and tweets.\r\n\r\nv1.0.0:\r\n\r\n-  This version no longer reuqires a separate settings.py file as all options can be entered as command line arguments\r\n\r\nv0.1.0:\r\n\r\n-  Alpha release - this version needs a settings.py to enter credentials.\r\n\r\n","google":"UA-2921908-14","note":"Don't delete this file! It's used internally to help with page regeneration."}